name: CI/CD Pipeline - chroma-data-ingestion

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: pytest tests/ --junitxml=test-results.xml

      - name: Archive Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results.xml

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/chroma-data-ingestion:latest .

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/chroma-data-ingestion:latest

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Deploy to Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          docker pull ${{ secrets.DOCKER_USERNAME }}/chroma-data-ingestion:latest
          docker stop chroma-data-ingestion || true
          docker rm chroma-data-ingestion || true
          docker run -d -p 8000:8000 --name chroma-data-ingestion ${{ secrets.DOCKER_USERNAME }}/chroma-data-ingestion:latest
          EOF
